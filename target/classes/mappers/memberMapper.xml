<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mapper.memberMapper">

	<!-- 
		mybatis-config.xml의 typeAlias에 등록해두지 않았다면 
		
		<select id="selectMember" resultType="com.example.dto.MemberVO" >
			SELECT ID, PW ,NAME FROM TEST
		</select>
		
		이렇게 해야 한다.
	-->
	
	<select id="selectContent" resultType="com.example.dto.HomeContentVO" >
		SELECT num, id ,title FROM CONTENTS
	</select>
	
	<select id="selectFile" resultType="com.example.dto.FileContentVO" >
		SELECT num, id ,title, content, save_file_name FROM FILECONTENTS
	</select>
	
	<select id="selectPhoto" resultType="com.example.dto.FileContentVO" >
		SELECT num, id ,title, content, save_file_name FROM PHOTOCONTENTS
	</select>
	
	<select id="selectpw" resultType="String" parameterType="String">
		SELECT pw FROM MEMBER WHERE id = #{a}
	</select>
	
	<select id="getcontent" resultType="com.example.dto.GetContentVO" parameterType="String">
		SELECT  title, content FROM CONTENTS WHERE num = #{num}
	</select>
	
	<select id="getfile" resultType="com.example.dto.FileContentVO2" parameterType="String">
		SELECT  title, content, save_file_name FROM FILECONTENTS WHERE num = #{num}
	</select>
	
	<select id="Cnum" resultType="String">
		SELECT  page_num FROM page_number WHERE page_name = "home"
	</select>
	
	<select id="Fnum" resultType="String">
		SELECT  page_num FROM page_number WHERE page_name = "file"
	</select>
	
	<select id="Pnum" resultType="String">
		SELECT  page_num FROM page_number WHERE page_name = "photo"
	</select>
	
	<insert id="insertingMember" parameterType="com.example.dto.MemberVO" >
		INSERT INTO TEST (ID, PW, NAME) VALUES (#{id}, #{pw}, #{name})
	</insert>
	
	<insert id="memberjoining" parameterType="com.example.dto.MemberjoinVO" >
		INSERT INTO MEMBER (id, pw, user_name, email) VALUES (#{id}, #{pw}, #{name}, #{email})
	</insert>
	
	<insert id="writing" parameterType="com.example.dto.ContentsVO" >
		INSERT INTO CONTENTS (id, title, content) VALUES (#{id}, #{title}, #{contents})
	</insert>
	
    <insert id="filewriting" parameterType="com.example.dto.FileContentVO" >
		INSERT INTO FILECONTENTS (id, title, content, save_file_name) VALUES (#{id}, #{title}, #{contents}, #{save_file_name})
	</insert>
	
	<insert id="photowriting" parameterType="com.example.dto.FileContentVO" >
		INSERT INTO PHOTOCONTENTS (id, title, content, save_file_name) VALUES (#{id}, #{title}, #{contents}, #{save_file_name})
	</insert>
	
	<update id="updatingMember" parameterType="com.example.dto.MemberVO" >
		UPDATE TEST SET ID = #{id}, PW = #{pw}, NAME = #{name} WHERE ID = #{id}
	</update> 
	
	<update id="newupdating" parameterType="com.example.dto.NewupdatingVO" >
		update CONTENTS set title = #{title}, content = #{content} WHERE num = #{num}
	</update>  
	
	<update id="minus_homenum"> 
		UPDATE page_number SET page_num = page_num - 1 WHERE page_name = 'home'
	</update>
	
	<update id="plus_homenum">
		UPDATE page_number SET page_num = page_num + 1 WHERE page_name = 'home'
	</update>  
	
	<update id="minus_filenum"> 
		UPDATE page_number SET page_num = page_num - 1 WHERE page_name = 'file'
	</update>
	
	<update id="plus_filenum">
		UPDATE page_number SET page_num = page_num + 1 WHERE page_name = 'file'
	</update>
	
	<update id="minus_photonum"> 
		UPDATE page_number SET page_num = page_num - 1 WHERE page_name = 'photo'
	</update>
	
	<update id="plus_photonum">
		UPDATE page_number SET page_num = page_num + 1 WHERE page_name = 'photo'
	</update>
	
	
	<delete id="deletingMember" parameterType="com.example.dto.NewupdatingVO"> 
		DELETE FROM CONTENTS WHERE num = #{num}
	</delete> 	
	
</mapper>